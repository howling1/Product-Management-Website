<?xml version="1.0" encoding="UTF-8"?>
<!--config file for creating servlet objects and filter obejects-->
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <!--register character encoding filter to force request object and response object to encode with UTF-8(mainly for handling Chinese post requests)-->
    <filter>
        <filter-name>encode</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceRequestEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>forceResponseEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encode</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--register SpringMvc dispatcher servlet object and SpringMvc applicationContext-->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--set contextConfigLocation attribute for dispatcher. The initialization process of dispatcher servlet object will create the applicationContext for SpringMvc and store it in the ServletContext-->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>
    </servlet>
    <!--dispatcher only handle request with the format of *.action. Other requests go to Tomcat default servlet-->
    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <url-pattern>*.action</url-pattern>
    </servlet-mapping>

    <!--By listener provided by spring, create Spring applicationContext and save it in ServletContext-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <!--include objects in applicationContext_dao.xml and applicationContext_service.xml in the same applicationContext-->
        <param-value>classpath:applicationContext_*.xml</param-value>
    </context-param>
    <!--Now, we have 2 applicationContexts in the ServletContext, respectively SpringMvc and Spring-->
</web-app>